// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  firstName String?
  lastName  String?
  active    UserStatus @default(INACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relation
  userRoleAssignment UserRoleAssignment[]
  token              Token[]
}

model UserRole {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relation
  userRoleAssignment UserRoleAssignment[]
}

model UserRoleAssignment {
  userId     String
  roleId     String
  assignedAt DateTime @default(now())

  // Relation
  user User     @relation(fields: [userId], references: [id])
  role UserRole @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Token {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  isExpired Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
